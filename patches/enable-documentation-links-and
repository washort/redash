Bottom: cb5736f7801f57dbb062df57736cdfd725c48bbd
Top:    c34d596a36745b354344ac0db316f63fd60390a7
Author: Allen Short <ashort@mozilla.com>
Date:   2016-11-08 16:15:35 -0600

Enable documentation links and versions of data sources (re #6).

Refs #537, #553.

Co-authored-by: Marina Samuel <msamuel@mozilla.com>
Co-authored-by: Allen Short <ashort@mozilla.com>


---
diff --git a/client/app/assets/less/redash/query.less b/client/app/assets/less/redash/query.less
index 5ef3b936..cb737160 100644
--- a/client/app/assets/less/redash/query.less
+++ b/client/app/assets/less/redash/query.less
@@ -467,6 +467,7 @@ a.label-tag {
 
 .datasource-small {
   visibility: hidden;
+  display: none !important;
 }
 
 .query-fullscreen .query-metadata__mobile {
@@ -593,6 +594,11 @@ nav .rg-bottom {
     display: none;
   }
 
+  .datasource-small {
+    visibility: visible;
+    display: inline-block !important;
+  }
+
   .query-fullscreen {
     flex-direction: column;
     overflow: hidden;
diff --git a/client/app/pages/queries/query.html b/client/app/pages/queries/query.html
index 9641d4ac..27fe0ca6 100644
--- a/client/app/pages/queries/query.html
+++ b/client/app/pages/queries/query.html
@@ -93,6 +93,8 @@
             {{ds.name}}
           </ui-select-choices>
         </ui-select>
+        <datasource-link datasource-id="query.data_source_id"></datasource-link>
+        <datasource-version datasource-id="query.data_source_id"></datasource-version>
       </div>
 
       <div class="editor__left__schema" ng-if="sourceMode">
diff --git a/redash/models/__init__.py b/redash/models/__init__.py
index 97599841..b2d835f5 100644
--- a/redash/models/__init__.py
+++ b/redash/models/__init__.py
@@ -184,6 +184,8 @@ class DataSource(BelongsToOrgMixin, db.Model):
         db.session.add(dsg)
         return dsg
 
+        setattr(self, 'data_source_groups', dsg)
+
     def remove_group(self, group):
         DataSourceGroup.query.filter(
             DataSourceGroup.group == group,
diff --git a/redash/query_runner/__init__.py b/redash/query_runner/__init__.py
index 2eb14128..1162f181 100644
--- a/redash/query_runner/__init__.py
+++ b/redash/query_runner/__init__.py
@@ -54,6 +54,7 @@ class NotSupported(Exception):
 
 class BaseQueryRunner(object):
     noop_query = None
+    configuration_properties = None
 
     def __init__(self, configuration):
         self.syntax = 'sql'
@@ -79,6 +80,12 @@ class BaseQueryRunner(object):
     def configuration_schema(cls):
         return {}
 
+    @classmethod
+    def add_configuration_property(cls, property, value):
+        if cls.configuration_properties is None:
+            raise NotImplementedError()
+        cls.configuration_properties[property] = value
+
     def test_connection(self):
         if self.noop_query is None:
             raise NotImplementedError()
@@ -153,31 +160,36 @@ class BaseHTTPQueryRunner(BaseQueryRunner):
     url_title = 'URL base path'
     username_title = 'HTTP Basic Auth Username'
     password_title = 'HTTP Basic Auth Password'
+    configuration_properties = {
+        'url': {
+            'type': 'string',
+            'title': url_title,
+        },
+        'username': {
+            'type': 'string',
+            'title': username_title,
+        },
+        'password': {
+            'type': 'string',
+            'title': password_title,
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": (
+                "This string will be used to toggle visibility of "
+                "tables in the schema browser when editing a query "
+                "in order to remove non-useful tables from sight."
+            ),
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         schema = {
             'type': 'object',
-            'properties': {
-                'url': {
-                    'type': 'string',
-                    'title': cls.url_title,
-                },
-                'username': {
-                    'type': 'string',
-                    'title': cls.username_title,
-                },
-                'password': {
-                    'type': 'string',
-                    'title': cls.password_title,
-                },
-                'toggle_table_string': {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                },
-            },
+            'properties': cls.configuration_properties,
             'secret': ['password'],
             'order': ['url', 'username', 'password']
         }
diff --git a/redash/query_runner/big_query.py b/redash/query_runner/big_query.py
index 22d77c88..bc625602 100644
--- a/redash/query_runner/big_query.py
+++ b/redash/query_runner/big_query.py
@@ -84,6 +84,47 @@ def _get_query_results(jobs, project_id, location, job_id, start_index):
 
 class BigQuery(BaseQueryRunner):
     noop_query = "SELECT 1"
+    configuration_properties = {
+        'projectId': {
+            'type': 'string',
+            'title': 'Project ID'
+        },
+        'jsonKeyFile': {
+            "type": "string",
+            'title': 'JSON Key File'
+        },
+        'totalMBytesProcessedLimit': {
+            "type": "number",
+            'title': 'Scanned Data Limit (MB)'
+        },
+        'userDefinedFunctionResourceUri': {
+            "type": "string",
+            'title': 'UDF Source URIs (i.e. gs://bucket/date_utils.js, gs://bucket/string_utils.js )'
+        },
+        'useStandardSql': {
+            "type": "boolean",
+            'title': "Use Standard SQL (Beta)",
+        },
+        'location': {
+            "type": "string",
+            "title": "Processing Location",
+            "default": "US",
+        },
+        'loadSchema': {
+            "type": "boolean",
+            "title": "Load Schema"
+        },
+        'maximumBillingTier': {
+            "type": "number",
+            "title": "Maximum Billing Tier"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def enabled(cls):
@@ -93,47 +134,7 @@ class BigQuery(BaseQueryRunner):
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'projectId': {
-                    'type': 'string',
-                    'title': 'Project ID'
-                },
-                'jsonKeyFile': {
-                    "type": "string",
-                    'title': 'JSON Key File'
-                },
-                'totalMBytesProcessedLimit': {
-                    "type": "number",
-                    'title': 'Scanned Data Limit (MB)'
-                },
-                'userDefinedFunctionResourceUri': {
-                    "type": "string",
-                    'title': 'UDF Source URIs (i.e. gs://bucket/date_utils.js, gs://bucket/string_utils.js )'
-                },
-                'useStandardSql': {
-                    "type": "boolean",
-                    'title': "Use Standard SQL",
-                    "default": True,
-                },
-                'location': {
-                    "type": "string",
-                    "title": "Processing Location",
-                },
-                'loadSchema': {
-                    "type": "boolean",
-                    "title": "Load Schema"
-                },
-                'maximumBillingTier': {
-                    "type": "number",
-                    "title": "Maximum Billing Tier"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             'required': ['jsonKeyFile', 'projectId'],
             "order": ['projectId', 'jsonKeyFile', 'loadSchema', 'useStandardSql', 'location', 'totalMBytesProcessedLimit', 'maximumBillingTier', 'userDefinedFunctionResourceUri'],
             'secret': ['jsonKeyFile']
diff --git a/redash/query_runner/cass.py b/redash/query_runner/cass.py
index 11550dd1..e59f8d0c 100644
--- a/redash/query_runner/cass.py
+++ b/redash/query_runner/cass.py
@@ -23,6 +23,43 @@ class CassandraJSONEncoder(JSONEncoder):
 
 class Cassandra(BaseQueryRunner):
     noop_query = "SELECT dateof(now()) FROM system.local"
+    configuration_properties = {
+        'host': {
+            'type': 'string',
+        },
+        'port': {
+            'type': 'number',
+            'default': 9042,
+        },
+        'keyspace': {
+            'type': 'string',
+            'title': 'Keyspace name'
+        },
+        'username': {
+            'type': 'string',
+            'title': 'Username'
+        },
+        'password': {
+            'type': 'string',
+            'title': 'Password'
+        },
+        'protocol': {
+            'type': 'number',
+            'title': 'Protocol Version',
+            'default': 3
+        },
+        'timeout': {
+            'type': 'number',
+            'title': 'Timeout',
+            'default': 10
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def enabled(cls):
@@ -32,43 +69,7 @@ class Cassandra(BaseQueryRunner):
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'host': {
-                    'type': 'string',
-                },
-                'port': {
-                    'type': 'number',
-                    'default': 9042,
-                },
-                'keyspace': {
-                    'type': 'string',
-                    'title': 'Keyspace name'
-                },
-                'username': {
-                    'type': 'string',
-                    'title': 'Username'
-                },
-                'password': {
-                    'type': 'string',
-                    'title': 'Password'
-                },
-                'protocol': {
-                    'type': 'number',
-                    'title': 'Protocol Version',
-                    'default': 3
-                },
-                'timeout': {
-                    'type': 'number',
-                    'title': 'Timeout',
-                    'default': 10
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             'required': ['keyspace', 'host']
         }
 
diff --git a/redash/query_runner/dynamodb_sql.py b/redash/query_runner/dynamodb_sql.py
index 333989f2..84530d5d 100644
--- a/redash/query_runner/dynamodb_sql.py
+++ b/redash/query_runner/dynamodb_sql.py
@@ -33,28 +33,31 @@ types_map = {
 
 
 class DynamoDBSQL(BaseSQLQueryRunner):
+    noop_query = "SELECT 1"
+    configuration_properties = {
+        "region": {
+            "type": "string",
+            "default": "us-east-1"
+        },
+        "access_key": {
+            "type": "string",
+        },
+        "secret_key": {
+            "type": "string",
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
+
     @classmethod
     def configuration_schema(cls):
         return {
             "type": "object",
-            "properties": {
-                "region": {
-                    "type": "string",
-                    "default": "us-east-1"
-                },
-                "access_key": {
-                    "type": "string",
-                },
-                "secret_key": {
-                    "type": "string",
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            "properties": cls.configuration_properties,
             "required": ["access_key", "secret_key"],
             "secret": ["secret_key"]
         }
diff --git a/redash/query_runner/elasticsearch.py b/redash/query_runner/elasticsearch.py
index 4d642ceb..3ceefee2 100644
--- a/redash/query_runner/elasticsearch.py
+++ b/redash/query_runner/elasticsearch.py
@@ -45,31 +45,32 @@ PYTHON_TYPES_MAPPING = {
 
 class BaseElasticSearch(BaseQueryRunner):
     DEBUG_ENABLED = False
+    configuration_properties = {
+        'server': {
+            'type': 'string',
+            'title': 'Base URL'
+        },
+        'basic_auth_user': {
+            'type': 'string',
+            'title': 'Basic Auth User'
+        },
+        'basic_auth_password': {
+            'type': 'string',
+            'title': 'Basic Auth Password'
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'server': {
-                    'type': 'string',
-                    'title': 'Base URL'
-                },
-                'basic_auth_user': {
-                    'type': 'string',
-                    'title': 'Basic Auth User'
-                },
-                'basic_auth_password': {
-                    'type': 'string',
-                    'title': 'Basic Auth Password'
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             "order": ['server', 'basic_auth_user', 'basic_auth_password'],
             "secret": ["basic_auth_password"],
             "required": ["server"]
diff --git a/redash/query_runner/google_spreadsheets.py b/redash/query_runner/google_spreadsheets.py
index 9c1f0fee..237fc911 100644
--- a/redash/query_runner/google_spreadsheets.py
+++ b/redash/query_runner/google_spreadsheets.py
@@ -128,6 +128,19 @@ class TimeoutSession(Session):
 
 
 class GoogleSpreadsheet(BaseQueryRunner):
+    configuration_properties = {
+        'jsonKeyFile': {
+            "type": "string",
+            'title': 'JSON Key File'
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
+
     def __init__(self, configuration):
         super(GoogleSpreadsheet, self).__init__(configuration)
         self.syntax = 'custom'
@@ -148,18 +161,7 @@ class GoogleSpreadsheet(BaseQueryRunner):
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'jsonKeyFile': {
-                    "type": "string",
-                    'title': 'JSON Key File'
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             'required': ['jsonKeyFile'],
             'secret': ['jsonKeyFile']
         }
diff --git a/redash/query_runner/graphite.py b/redash/query_runner/graphite.py
index adc08260..62f23bc3 100644
--- a/redash/query_runner/graphite.py
+++ b/redash/query_runner/graphite.py
@@ -49,7 +49,7 @@ class Graphite(BaseQueryRunner):
                     "title": "Toggle Table String",
                     "default": "_v",
                     "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
+                },
             },
             'required': ['url'],
             'secret': ['password']
diff --git a/redash/query_runner/hive_ds.py b/redash/query_runner/hive_ds.py
index 6d8ec67c..cab6ff1d 100644
--- a/redash/query_runner/hive_ds.py
+++ b/redash/query_runner/hive_ds.py
@@ -37,31 +37,32 @@ types_map = {
 
 class Hive(BaseSQLQueryRunner):
     noop_query = "SELECT 1"
+    configuration_properties = {
+        "host": {
+            "type": "string"
+        },
+        "port": {
+            "type": "number"
+        },
+        "database": {
+            "type": "string"
+        },
+        "username": {
+            "type": "string"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             "type": "object",
-            "properties": {
-                "host": {
-                    "type": "string"
-                },
-                "port": {
-                    "type": "number"
-                },
-                "database": {
-                    "type": "string"
-                },
-                "username": {
-                    "type": "string"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            "properties": cls.configuration_properties,
             "order": ["host", "port", "database", "username"],
             "required": ["host"]
         }
diff --git a/redash/query_runner/impala_ds.py b/redash/query_runner/impala_ds.py
index b57bb0b7..111d39b4 100644
--- a/redash/query_runner/impala_ds.py
+++ b/redash/query_runner/impala_ds.py
@@ -34,44 +34,45 @@ types_map = {
 
 class Impala(BaseSQLQueryRunner):
     noop_query = "show schemas"
+    configuration_properties = {
+        "host": {
+            "type": "string"
+        },
+        "port": {
+            "type": "number"
+        },
+        "protocol": {
+            "type": "string",
+            "title": "Please specify beeswax or hiveserver2"
+        },
+        "database": {
+            "type": "string"
+        },
+        "use_ldap": {
+            "type": "boolean"
+        },
+        "ldap_user": {
+            "type": "string"
+        },
+        "ldap_password": {
+            "type": "string"
+        },
+        "timeout": {
+            "type": "number"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             "type": "object",
-            "properties": {
-                "host": {
-                    "type": "string"
-                },
-                "port": {
-                    "type": "number"
-                },
-                "protocol": {
-                    "type": "string",
-                    "title": "Please specify beeswax or hiveserver2"
-                },
-                "database": {
-                    "type": "string"
-                },
-                "use_ldap": {
-                    "type": "boolean"
-                },
-                "ldap_user": {
-                    "type": "string"
-                },
-                "ldap_password": {
-                    "type": "string"
-                },
-                "timeout": {
-                    "type": "number"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            "properties": cls.configuration_properties,
             "required": ["host"],
             "secret": ["ldap_password"]
         }
diff --git a/redash/query_runner/influx_db.py b/redash/query_runner/influx_db.py
index aee41318..d3351312 100644
--- a/redash/query_runner/influx_db.py
+++ b/redash/query_runner/influx_db.py
@@ -49,22 +49,23 @@ def _transform_result(results):
 
 class InfluxDB(BaseQueryRunner):
     noop_query = "show measurements limit 1"
+    configuration_properties = {
+        'url': {
+            'type': 'string'
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'url': {
-                    'type': 'string'
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             'required': ['url']
         }
 
diff --git a/redash/query_runner/mongodb.py b/redash/query_runner/mongodb.py
index 1dee9ac1..345c1185 100644
--- a/redash/query_runner/mongodb.py
+++ b/redash/query_runner/mongodb.py
@@ -119,30 +119,32 @@ def parse_results(results):
 
 
 class MongoDB(BaseQueryRunner):
+    configuration_properties = {
+        'connectionString': {
+            'type': 'string',
+            'title': 'Connection String'
+        },
+        'dbName': {
+            'type': 'string',
+            'title': "Database Name"
+        },
+        'replicaSetName': {
+            'type': 'string',
+            'title': 'Replica Set Name'
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
+
     @classmethod
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'connectionString': {
-                    'type': 'string',
-                    'title': 'Connection String'
-                },
-                'dbName': {
-                    'type': 'string',
-                    'title': "Database Name"
-                },
-                'replicaSetName': {
-                    'type': 'string',
-                    'title': 'Replica Set Name'
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                },
-            },
+            'properties': cls.configuration_properties,
             'required': ['connectionString', 'dbName']
         }
 
diff --git a/redash/query_runner/mssql.py b/redash/query_runner/mssql.py
index 0cf25567..b2c188d1 100644
--- a/redash/query_runner/mssql.py
+++ b/redash/query_runner/mssql.py
@@ -27,47 +27,48 @@ types_map = {
 
 class SqlServer(BaseSQLQueryRunner):
     noop_query = "SELECT 1"
+    configuration_properties = {
+        "user": {
+            "type": "string"
+        },
+        "password": {
+            "type": "string"
+        },
+        "server": {
+            "type": "string",
+            "default": "127.0.0.1"
+        },
+        "port": {
+            "type": "number",
+            "default": 1433
+        },
+        "tds_version": {
+            "type": "string",
+            "default": "7.0",
+            "title": "TDS Version"
+        },
+        "charset": {
+            "type": "string",
+            "default": "UTF-8",
+            "title": "Character Set"
+        },
+        "db": {
+            "type": "string",
+            "title": "Database Name"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             "type": "object",
-            "properties": {
-                "user": {
-                    "type": "string"
-                },
-                "password": {
-                    "type": "string"
-                },
-                "server": {
-                    "type": "string",
-                    "default": "127.0.0.1"
-                },
-                "port": {
-                    "type": "number",
-                    "default": 1433
-                },
-                "tds_version": {
-                    "type": "string",
-                    "default": "7.0",
-                    "title": "TDS Version"
-                },
-                "charset": {
-                    "type": "string",
-                    "default": "UTF-8",
-                    "title": "Character Set"
-                },
-                "db": {
-                    "type": "string",
-                    "title": "Database Name"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            "properties": cls.configuration_properties,
             "required": ["db"],
             "secret": ["password"]
         }
diff --git a/redash/query_runner/mysql.py b/redash/query_runner/mysql.py
index 9815100b..a7246020 100644
--- a/redash/query_runner/mysql.py
+++ b/redash/query_runner/mysql.py
@@ -28,6 +28,33 @@ types_map = {
 
 class Mysql(BaseSQLQueryRunner):
     noop_query = "SELECT 1"
+    configuration_properties = {
+        'host': {
+            'type': 'string',
+            'default': '127.0.0.1'
+        },
+        'user': {
+            'type': 'string'
+        },
+        'passwd': {
+            'type': 'string',
+            'title': 'Password'
+        },
+        'db': {
+            'type': 'string',
+            'title': 'Database name'
+        },
+        'port': {
+            'type': 'number',
+            'default': 3306,
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
@@ -35,33 +62,7 @@ class Mysql(BaseSQLQueryRunner):
 
         schema = {
             'type': 'object',
-            'properties': {
-                'host': {
-                    'type': 'string',
-                    'default': '127.0.0.1'
-                },
-                'user': {
-                    'type': 'string'
-                },
-                'passwd': {
-                    'type': 'string',
-                    'title': 'Password'
-                },
-                'db': {
-                    'type': 'string',
-                    'title': 'Database name'
-                },
-                'port': {
-                    'type': 'number',
-                    'default': 3306,
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             "order": ['host', 'port', 'user', 'passwd', 'db'],
             'required': ['db'],
             'secret': ['passwd']
@@ -84,7 +85,7 @@ class Mysql(BaseSQLQueryRunner):
                 'ssl_key': {
                     'type': 'string',
                     'title': 'Path to private key file (SSL)'
-                }
+                },
             })
 
         return schema
diff --git a/redash/query_runner/oracle.py b/redash/query_runner/oracle.py
index 8979ebb1..7acb9f00 100644
--- a/redash/query_runner/oracle.py
+++ b/redash/query_runner/oracle.py
@@ -29,8 +29,33 @@ except ImportError:
 
 logger = logging.getLogger(__name__)
 
+
 class Oracle(BaseSQLQueryRunner):
     noop_query = "SELECT 1 FROM dual"
+    configuration_properties = {
+        "user": {
+            "type": "string"
+        },
+        "password": {
+            "type": "string"
+        },
+        "host": {
+            "type": "string"
+        },
+        "port": {
+            "type": "number"
+        },
+        "servicename": {
+            "type": "string",
+            "title": "DSN Service Name"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def get_col_type(cls, col_type, scale):
@@ -47,30 +72,7 @@ class Oracle(BaseSQLQueryRunner):
     def configuration_schema(cls):
         return {
             "type": "object",
-            "properties": {
-                "user": {
-                    "type": "string"
-                },
-                "password": {
-                    "type": "string"
-                },
-                "host": {
-                    "type": "string"
-                },
-                "port": {
-                    "type": "number"
-                },
-                "servicename": {
-                    "type": "string",
-                    "title": "DSN Service Name"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            "properties": cls.configuration_properties,
             "required": ["servicename", "user", "password", "host", "port"],
             "secret": ["password"]
         }
diff --git a/redash/query_runner/pg.py b/redash/query_runner/pg.py
index 3c842400..40d7b0f7 100644
--- a/redash/query_runner/pg.py
+++ b/redash/query_runner/pg.py
@@ -67,42 +67,43 @@ def _wait(conn, timeout=None):
 
 class PostgreSQL(BaseSQLQueryRunner):
     noop_query = "SELECT 1"
+    configuration_properties = {
+        "user": {
+            "type": "string"
+        },
+        "password": {
+            "type": "string"
+        },
+        "host": {
+            "type": "string",
+            "default": "127.0.0.1"
+        },
+        "port": {
+            "type": "number",
+            "default": 5432
+        },
+        "dbname": {
+            "type": "string",
+            "title": "Database Name"
+        },
+        "sslmode": {
+           "type": "string",
+           "title": "SSL Mode",
+           "default": "prefer"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             "type": "object",
-            "properties": {
-                "user": {
-                    "type": "string"
-                },
-                "password": {
-                    "type": "string"
-                },
-                "host": {
-                    "type": "string",
-                    "default": "127.0.0.1"
-                },
-                "port": {
-                    "type": "number",
-                    "default": 5432
-                },
-                "dbname": {
-                    "type": "string",
-                    "title": "Database Name"
-                },
-                "sslmode": {
-                   "type": "string",
-                   "title": "SSL Mode",
-                   "default": "prefer"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            "properties": cls.configuration_properties,
             "order": ['host', 'port', 'user', 'password'],
             "required": ["dbname"],
             "secret": ["password"]
@@ -221,6 +222,36 @@ class PostgreSQL(BaseSQLQueryRunner):
 
 
 class Redshift(PostgreSQL):
+    configuration_properties = {
+        "user": {
+            "type": "string"
+        },
+        "password": {
+            "type": "string"
+        },
+        "host": {
+            "type": "string"
+        },
+        "port": {
+            "type": "number"
+        },
+        "dbname": {
+            "type": "string",
+            "title": "Database Name"
+        },
+        "sslmode": {
+           "type": "string",
+           "title": "SSL Mode",
+           "default": "prefer"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
+
     @classmethod
     def type(cls):
         return "redshift"
@@ -244,29 +275,7 @@ class Redshift(PostgreSQL):
 
         return {
             "type": "object",
-            "properties": {
-                "user": {
-                    "type": "string"
-                },
-                "password": {
-                    "type": "string"
-                },
-                "host": {
-                    "type": "string"
-                },
-                "port": {
-                    "type": "number"
-                },
-                "dbname": {
-                    "type": "string",
-                    "title": "Database Name"
-                },
-                "sslmode": {
-                   "type": "string",
-                   "title": "SSL Mode",
-                   "default": "prefer"
-                }
-            },
+            "properties": cls.configuration_properties,
             "order": ['host', 'port', 'user', 'password'],
             "required": ["dbname", "user", "password", "host", "port"],
             "secret": ["password"]
diff --git a/redash/query_runner/presto.py b/redash/query_runner/presto.py
index 17a797ca..bd8a3869 100644
--- a/redash/query_runner/presto.py
+++ b/redash/query_runner/presto.py
@@ -31,42 +31,43 @@ PRESTO_TYPES_MAPPING = {
 
 class Presto(BaseQueryRunner):
     noop_query = 'SHOW TABLES'
+    configuration_properties = {
+        'host': {
+            'type': 'string'
+        },
+        'protocol': {
+            'type': 'string',
+            'default': 'http'
+        },
+        'port': {
+            'type': 'number'
+        },
+        'schema': {
+            'type': 'string'
+        },
+        'catalog': {
+            'type': 'string'
+        },
+        'username': {
+            'type': 'string'
+        },
+        'password': {
+            'type': 'string'
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'host': {
-                    'type': 'string'
-                },
-                'protocol': {
-                    'type': 'string',
-                    'default': 'http'
-                },
-                'port': {
-                    'type': 'number'
-                },
-                'schema': {
-                    'type': 'string'
-                },
-                'catalog': {
-                    'type': 'string'
-                },
-                'username': {
-                    'type': 'string'
-                },
-                'password': {
-                    'type': 'string'
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                },
-            },
-            'order': ['host', 'protocol', 'port', 'username', 'password', 'schema', 'catalog'],
+            'properties': cls.configuration_properties,
+            'order': ['host', 'protocol', 'port', 'username', 'schema', 'catalog'],
             'required': ['host']
         }
 
diff --git a/redash/query_runner/python.py b/redash/query_runner/python.py
index 4fdf0de6..9b29128c 100644
--- a/redash/query_runner/python.py
+++ b/redash/query_runner/python.py
@@ -44,25 +44,27 @@ class Python(BaseQueryRunner):
         'tuple', 'set', 'list', 'dict', 'bool',
     )
 
+    configuration_properties = {
+        'allowedImportModules': {
+            'type': 'string',
+            'title': 'Modules to import prior to running the script'
+        },
+        'additionalModulesPaths': {
+            'type': 'string'
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
+
     @classmethod
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'allowedImportModules': {
-                    'type': 'string',
-                    'title': 'Modules to import prior to running the script'
-                },
-                'additionalModulesPaths': {
-                    'type': 'string'
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties
         }
 
     @classmethod
diff --git a/redash/query_runner/script.py b/redash/query_runner/script.py
index 1a4b80bd..808d1024 100644
--- a/redash/query_runner/script.py
+++ b/redash/query_runner/script.py
@@ -29,6 +29,23 @@ def run_script(script, shell):
 
 
 class Script(BaseQueryRunner):
+    configuration_properties = {
+        'path': {
+            'type': 'string',
+            'title': 'Scripts path'
+        },
+        'shell': {
+            'type': 'boolean',
+            'title': 'Execute command through the shell'
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
+
     @classmethod
     def annotate_query(cls):
         return False
@@ -41,22 +58,7 @@ class Script(BaseQueryRunner):
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'path': {
-                    'type': 'string',
-                    'title': 'Scripts path'
-                },
-                'shell': {
-                    'type': 'boolean',
-                    'title': 'Execute command through the shell'
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             'required': ['path']
         }
 
diff --git a/redash/query_runner/sqlite.py b/redash/query_runner/sqlite.py
index 9f02315e..79c4f9c3 100644
--- a/redash/query_runner/sqlite.py
+++ b/redash/query_runner/sqlite.py
@@ -12,23 +12,24 @@ logger = logging.getLogger(__name__)
 
 class Sqlite(BaseSQLQueryRunner):
     noop_query = "pragma quick_check"
+    configuration_properties = {
+        "dbpath": {
+            "type": "string",
+            "title": "Database Path"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             "type": "object",
-            "properties": {
-                "dbpath": {
-                    "type": "string",
-                    "title": "Database Path"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            "properties": cls.configuration_properties,
             "required": ["dbpath"],
         }
 
diff --git a/redash/query_runner/treasuredata.py b/redash/query_runner/treasuredata.py
index 52ee2029..53217068 100644
--- a/redash/query_runner/treasuredata.py
+++ b/redash/query_runner/treasuredata.py
@@ -35,37 +35,38 @@ TD_TYPES_MAPPING = {
 
 class TreasureData(BaseQueryRunner):
     noop_query = "SELECT 1"
+    configuration_properties = {
+        'endpoint': {
+            'type': 'string'
+        },
+        'apikey': {
+            'type': 'string'
+        },
+        'type': {
+            'type': 'string'
+        },
+        'db': {
+            'type': 'string',
+            'title': 'Database Name'
+        },
+        'get_schema': {
+            'type': 'boolean',
+            'title': 'Auto Schema Retrieval',
+            'default': False
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'endpoint': {
-                    'type': 'string'
-                },
-                'apikey': {
-                    'type': 'string'
-                },
-                'type': {
-                    'type': 'string'
-                },
-                'db': {
-                    'type': 'string',
-                    'title': 'Database Name'
-                },
-                'get_schema': {
-                    'type': 'boolean',
-                    'title': 'Auto Schema Retrieval',
-                    'default': False
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                }
-            },
+            'properties': cls.configuration_properties,
             'required': ['apikey','db']
         }
 
diff --git a/redash/query_runner/vertica.py b/redash/query_runner/vertica.py
index 92633eb2..6bffece1 100644
--- a/redash/query_runner/vertica.py
+++ b/redash/query_runner/vertica.py
@@ -29,44 +29,45 @@ types_map = {
 
 class Vertica(BaseSQLQueryRunner):
     noop_query = "SELECT 1"
+    configuration_properties = {
+        'host': {
+            'type': 'string'
+        },
+        'user': {
+            'type': 'string'
+        },
+        'password': {
+            'type': 'string',
+            'title': 'Password'
+        },
+        'database': {
+            'type': 'string',
+            'title': 'Database name'
+        },
+        "port": {
+            "type": "number"
+        },
+        "read_timeout": {
+            "type": "number",
+            "title": "Read Timeout"
+        },
+        "connection_timeout": {
+            "type": "number",
+            "title": "Connection Timeout"
+        },
+        "toggle_table_string": {
+            "type": "string",
+            "title": "Toggle Table String",
+            "default": "_v",
+            "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
+        },
+    }
 
     @classmethod
     def configuration_schema(cls):
         return {
             'type': 'object',
-            'properties': {
-                'host': {
-                    'type': 'string'
-                },
-                'user': {
-                    'type': 'string'
-                },
-                'password': {
-                    'type': 'string',
-                    'title': 'Password'
-                },
-                'database': {
-                    'type': 'string',
-                    'title': 'Database name'
-                },
-                "port": {
-                    "type": "number"
-                },
-                "read_timeout": {
-                    "type": "number",
-                    "title": "Read Timeout"
-                },
-                "connection_timeout": {
-                    "type": "number",
-                    "title": "Connection Timeout"
-                },
-                "toggle_table_string": {
-                    "type": "string",
-                    "title": "Toggle Table String",
-                    "default": "_v",
-                    "info": "This string will be used to toggle visibility of tables in the schema browser when editing a query in order to remove non-useful tables from sight."
-                },
-            },
+            'properties': cls.configuration_properties,
             'required': ['database'],
             'order': ['host', 'port', 'user', 'password', 'database', 'read_timeout', 'connection_timeout'],
             'secret': ['password']
diff --git a/requirements.txt b/requirements.txt
index 9d5133d9..d2d30639 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -61,4 +61,4 @@ disposable-email-domains
 # It is not included by default because of the GPL license conflict.
 # ldap3==2.2.4
 gevent==1.4.0
-redash-stmo>=2018.8.1
+redash-stmo>=2018.9.1
diff --git a/tests/handlers/test_data_sources.py b/tests/handlers/test_data_sources.py
index 3a5aa0d9..2708c47c 100644
--- a/tests/handlers/test_data_sources.py
+++ b/tests/handlers/test_data_sources.py
@@ -60,7 +60,8 @@ class TestDataSourceResourcePost(BaseTestCase):
         new_name = 'New Name'
         new_options = {"dbname": "newdb"}
         rv = self.make_request('post', self.path,
-                               data={'name': new_name, 'type': 'pg', 'options': new_options},
+                               data={'name': new_name, 'type': 'pg', 'options': new_options,
+                                     'doc_url': None},
                                user=admin)
 
         self.assertEqual(rv.status_code, 200)
@@ -101,7 +102,9 @@ class TestDataSourceListResourcePost(BaseTestCase):
     def test_creates_data_source(self):
         admin = self.factory.create_admin()
         rv = self.make_request('post', '/api/data_sources',
-                               data={'name': 'DS 1', 'type': 'pg', 'options': {"dbname": "redash"}}, user=admin)
+                               data={'name': 'DS 1', 'type': 'pg',
+                                     'options': {"dbname": "redash"},
+                                     'doc_url': None}, user=admin)
 
         self.assertEqual(rv.status_code, 200)
