Bottom: 805f9de586b8975c851de963614018488f4793fb
Top:    82b27f57aea8ea8911e08373135c66bb05258040
Author: Jannis Leidel <jannis@leidel.info>
Date:   2019-05-20 23:12:23 +0200

Add migrations-graph helper script.


---
diff --git a/bin/migrations-graph b/bin/migrations-graph
new file mode 100755
index 00000000..14af2c30
--- /dev/null
+++ b/bin/migrations-graph
@@ -0,0 +1,87 @@
+#!/usr/bin/env python
+"""
+A quick helper script to print the Alembic migration history
+via Graphiz and show it via GraphvizOnline on
+https://dreampuf.github.io/GraphvizOnline/.
+
+This requires the Graphviz Python library:
+
+   $ pip install --user graphviz
+
+Then run it with the path to the Alembic config file:
+
+   $ migrations-graph --config migrations/alembic.ini
+
+"""
+import os
+import sys
+import urllib
+
+import click
+from alembic import util
+from alembic.script import ScriptDirectory
+from alembic.config import Config
+from alembic.util import CommandError
+from graphviz import Digraph
+
+# Make sure redash can be imported in the migration files
+sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))
+
+
+def get_revisions(config, rev_range=None):
+    script = ScriptDirectory.from_config(config)
+
+    if rev_range is not None:
+        if ":" not in rev_range:
+            raise util.CommandError(
+                "History range requires [start]:[end], [start]:, or :[end]"
+            )
+        base, head = rev_range.strip().split(":")
+    else:
+        base = head = None
+
+    return script.walk_revisions(base=base or "base", head=head or "heads")
+
+
+def generate_revision_graph(revisions):
+    dot = Digraph()
+    for revision in revisions:
+        dot.node(revision.revision)
+        if revision.down_revision is None:
+            dot.edge("base", revision.revision)
+            continue
+        if isinstance(revision.down_revision, basestring):
+            dot.edge(revision.down_revision, revision.revision)
+            continue
+        for down_revision in revision.down_revision:
+            dot.edge(down_revision, revision.revision)
+    return dot
+
+
+@click.command()
+@click.option("--config", default="alembic.ini", help="path to alembic config file")
+@click.option("--name", default="alembic", help="name of the alembic ini section")
+def cli(config, name):
+    """
+    Generates a simple Graphviz dot file and creates a link to
+    view it online via https://dreampuf.github.io/GraphvizOnline/.
+    """
+    alembic_config = Config(file_=config, ini_section=name)
+    try:
+        revisions = get_revisions(alembic_config)
+    except CommandError as e:
+        sys.exit(e)
+
+    dot = generate_revision_graph(revisions)
+    encoded_dot = urllib.quote(str(dot.source))
+    viz_url = "https://dreampuf.github.io/GraphvizOnline/#%s" % encoded_dot
+    data = urllib.urlencode({"url": viz_url})
+    try:
+        url = urllib.urlopen("https://git.io/", data).headers["location"]
+    except KeyError:
+        sys.exit("Must be a GitHub.com URL.")
+    print("Generated graph for migration history in %s: %s " % (config, url))
+
+
+if __name__ == "__main__":
+    cli()
diff --git a/migrations/alembic.ini b/migrations/alembic.ini
index 138c1444..cda6dc82 100644
--- a/migrations/alembic.ini
+++ b/migrations/alembic.ini
@@ -1,6 +1,7 @@
 # A generic, single database configuration.
 
 [alembic]
+script_location = migrations
 # template used to generate migration files
 # file_template = %%(rev)s_%%(slug)s
