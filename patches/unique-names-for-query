Bottom: 948d7c849f13e8a747535c182e3def71bc2e2b92
Top:    fce84d7d696b83c47a7104aa843f1af93f9fad36
Author: Allen Short <ashort@mozilla.com>
Date:   2018-01-16 22:06:32 +0000

Unique names for query parameters (re #164)


---
diff --git a/client/app/services/query.js b/client/app/services/query.js
index 75f8b16d..6606de15 100644
--- a/client/app/services/query.js
+++ b/client/app/services/query.js
@@ -175,7 +175,7 @@ export class Parameter {
       };
     }
     return {
-      [`${prefix}${this.name}`]: this.value,
+      [`${prefix}${this.name}_${this.queryId}`]: this.value,
     };
   }
 
@@ -188,7 +188,7 @@ export class Parameter {
         this.setValue([query[keyStart], query[keyEnd]]);
       }
     } else {
-      const key = `${prefix}${this.name}`;
+      const key = `${prefix}${this.name}_${this.queryId}`;
       if (has(query, key)) {
         this.setValue(query[key]);
       }
@@ -551,7 +551,7 @@ function QueryResource(
         extend(params, param.toUrlParams());
       });
     }
-    params = map(params, (value, name) => `${encodeURIComponent(name)}=${encodeURIComponent(value)}`).join('&');
+    params = map(params, (value, name) => `${encodeURIComponent(name)}_${this.id}=${encodeURIComponent(value)}`).join('&');
 
     if (params !== '') {
       url += `?${params}`;
